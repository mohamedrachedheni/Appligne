"""
Django settings for Appligne project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from decouple import config
import datetime




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-yjb=-9#-u7!9%++z)*)au0z*j_nsognm2mt#=jem%y=5cfx0%l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [config('ALLOWED_HOST1', "localhost")]


# Application definition

INSTALLED_APPS = [
    'pages.apps.PagesConfig',
    'accounts',
    'eleves',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mathfilters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Appligne.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Appligne.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME':  config('NAME_DATABASE', default=False),
        'USER': config('USER_DATABASE', default=False),
        'PASSWORD': config('PASSWORD_DATABASE', default=False),
        'HOST': config('HOST_DATABASE', default=False),   # ou l'adresse de votre serveur MySQL
        'PORT': config('PORT_DATABASE', default=False),        # ou le port que vous utilisez pour MySQL
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",  # pour corriger l'erreur que vous pouvez rencontrer (mysql.W002) concernant le mode strict de MariaDB qui n'est pas activé pour la connexion à la base de données par défaut de Django (ChatGPT)
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT =  BASE_DIR /  'static'

STATIC_URL = 'static/'

# Media folder
# pour que les photos dela base des données seront stoquées dans le répertoire media et non static du frontEnd
MEDIA_ROOT = BASE_DIR /  'media'

MEDIA_URL = 'media/'

# localise l'emplacement des fichiers static du front_end qui vont etre 
# utiliser par django pour fabriquer le dossier static fonctionnel 
# dans django et qui contient le repertoire admin
STATICFILES_DIRS = [
    BASE_DIR /  'Appligne/static'
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom Messages
# https://docs.djangoproject.com/fr/5.0/ref/contrib/messages/
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    # changer le tag du message de error à danger car Bootstdap ignore le tag error
    messages.ERROR: "danger",
    #50: "critical",
}



# Récupération du mot de passe email depuis le fichier .env
PASSWORD_EMAIL = config('PASSWORD_EMAIL')

# # Paramètres SMTP pour l'envoi d'emails
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp-mail.outlook.com'
# EMAIL_PORT = 587  # Port SMTP pour TLS
# EMAIL_HOST_USER = 'appligne@outlook.com'  # Votre adresse Gmail
# EMAIL_HOST_PASSWORD = PASSWORD_EMAIL  # Mot de passe de votre compte Gmail
# EMAIL_USE_TLS = True  # Utiliser TLS (Transport Layer Security)

# EMAIL_HOST_USER = 'prosib25@gmail.com'  # Votre adresse Gmail
# EMAIL_HOST_USER = 'appligne@outlook.com'  # Votre adresse Gmail

# Paramètres SMTP pour l'envoi d'emails
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587  # Port SMTP pour TLS
EMAIL_HOST_USER = 'prosib25@gmail.com'  # Votre adresse Gmail
EMAIL_HOST_PASSWORD = PASSWORD_EMAIL  # Mot de passe de votre compte Gmail
EMAIL_USE_TLS = True  # Utiliser TLS (Transport Layer Security)

# Configurer les paramètres JWT
import datetime
PASSWORD_JWT = config('PASSWORD_JWT') # Récupération du mot de passe PASSWORD_JWT depuis le fichier .env
JWT_SECRET = PASSWORD_JWT # your_secret_key
JWT_ALGORITHM = 'HS256'
JWT_EXP_DELTA_SECONDS = 3600  # Token expiration time (e.g., 1 hour)
