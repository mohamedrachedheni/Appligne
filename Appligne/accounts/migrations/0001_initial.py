# Generated by Django 5.0 on 2025-02-14 13:03

import datetime
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('eleves', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departement', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['region'],
            },
        ),
        migrations.CreateModel(
            name='Diplome_cathegorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dip_cathegorie', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['nom_pays'],
            },
        ),
        migrations.CreateModel(
            name='Matiere_cathegorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mat_cathegorie', models.CharField(max_length=100, unique=True)),
                ('mat_cat_ordre', models.IntegerField()),
            ],
            options={
                'ordering': ['mat_cat_ordre'],
            },
        ),
        migrations.CreateModel(
            name='Niveau_cathegorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niv_cathegorie', models.CharField(max_length=100, unique=True)),
                ('niv_cat_ordre', models.IntegerField()),
            ],
            options={
                'ordering': ['niv_cat_ordre'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255)),
                ('model_id', models.IntegerField()),
                ('slug', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=255)),
                ('payment_attempts', models.PositiveIntegerField(default=1)),
                ('expiration_date', models.DateTimeField()),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(max_length=10)),
                ('source', models.CharField(default='desktop', max_length=255)),
                ('language', models.CharField(max_length=10)),
                ('membership_number', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_register_data', models.JSONField(blank=True, null=True)),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('canceled', 'Annulé'), ('invalid', 'Invalide')], default='pending', max_length=10)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_body', models.JSONField(blank=True, null=True)),
                ('approved', models.BooleanField(default=True)),
                ('accord_reglement_id', models.IntegerField(null=True)),
                ('reglement_realise', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_pays', models.CharField(max_length=100, unique=True)),
                ('drapeau', models.ImageField(upload_to='photos/%y/%m/%d/')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['nom_pays'],
            },
        ),
        migrations.CreateModel(
            name='AccordReglement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('email_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('in_progress', 'En cours'), ('completed', 'Réalisé'), ('invalid', 'Invalide'), ('canceled', 'Annulé')], default='pending', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccordRemboursement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('email_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('in_progress', 'En cours'), ('completed', 'Réalisé'), ('invalid', 'Invalide'), ('canceled', 'Annulé')], default='pending', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eleves.eleve')),
            ],
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format_cours', models.CharField(blank=True, max_length=255, null=True)),
                ('matiere', models.CharField(blank=True, max_length=255, null=True)),
                ('niveau', models.CharField(blank=True, max_length=255, null=True)),
                ('prix_heure', models.FloatField()),
                ('is_active', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Demande_paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.FloatField()),
                ('email', models.IntegerField(null=True)),
                ('vue_le', models.DateTimeField(blank=True, null=True)),
                ('email_eleve', models.IntegerField(null=True)),
                ('statut_demande', models.CharField(choices=[('En attente', 'En attente'), ('En cours', 'En cours'), ('Réaliser', 'Réaliser'), ('Contester', 'Contester'), ('Annuler', 'Annuler')], default='En attente', max_length=10)),
                ('payment_id', models.IntegerField(null=True)),
                ('accord_reglement_id', models.IntegerField(null=True)),
                ('reglement_realise', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eleves.eleve')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commune', models.CharField(max_length=100)),
                ('code_postal', models.CharField(blank=True, max_length=100, null=True)),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.departement')),
            ],
            options={
                'ordering': ['departement'],
            },
        ),
        migrations.CreateModel(
            name='Diplome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obtenu', models.DateField()),
                ('intitule', models.CharField(blank=True, max_length=255, null=True)),
                ('principal', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('diplome_cathegorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.diplome_cathegorie')),
            ],
            options={
                'ordering': ['-principal', '-obtenu'],
            },
        ),
        migrations.CreateModel(
            name='Email_telecharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_telechargement', models.DateTimeField(default=datetime.date.today)),
                ('email_telecharge', models.CharField(blank=True, max_length=255, null=True)),
                ('sujet', models.CharField(blank=True, max_length=255, null=True)),
                ('text_email', models.TextField(blank=True, null=True)),
                ('user_destinataire', models.IntegerField()),
                ('suivi', models.CharField(choices=[('Mis à côté', 'Mis à côté'), ('Réception confirmée', 'Réception confirmée'), ('Répondu', 'Répondu')], max_length=25, null=True)),
                ('date_suivi', models.DateTimeField(default=datetime.date.today)),
                ('reponse_email_id', models.IntegerField(null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_telechargement'],
            },
        ),
        migrations.CreateModel(
            name='Email_detaille',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_nom', models.CharField(blank=True, max_length=255, null=True)),
                ('matiere', models.CharField(blank=True, max_length=255, null=True)),
                ('niveau', models.CharField(blank=True, max_length=255, null=True)),
                ('format_cours', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.email_telecharge')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('debut', models.DateField()),
                ('fin', models.DateField(blank=True, null=True)),
                ('actuellement', models.BooleanField(default=False)),
                ('commentaire', models.CharField(blank=True, max_length=255, null=True)),
                ('principal', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Format_cour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_domicile', models.BooleanField(default=False)),
                ('webcam', models.BooleanField(default=False)),
                ('stage', models.BooleanField(default=False)),
                ('stage_webcam', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', '-a_domicile', '-webcam'],
            },
        ),
        migrations.CreateModel(
            name='Historique_prof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_premier_cours', models.DateField(blank=True, null=True)),
                ('date_dernier_cours', models.DateField(blank=True, null=True)),
                ('nb_eleve_inscrit', models.IntegerField(default=0)),
                ('nb_heure_declare', models.IntegerField(default=0)),
                ('nb_evaluation', models.IntegerField(default=0)),
                ('total_point_cumule', models.IntegerField(default=0)),
                ('moyenne_point_cumule', models.IntegerField(default=0)),
                ('nb_reponse_demande_cours', models.IntegerField(default=0)),
                ('total_cumul_temps_reponse', models.IntegerField(default=0)),
                ('moyenne_temps_reponse', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Horaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_cours', models.DateField(null=True)),
                ('heure_debut', models.TimeField(null=True)),
                ('heure_fin', models.TimeField(null=True)),
                ('duree', models.FloatField(default=1, null=True)),
                ('contenu', models.CharField(max_length=255)),
                ('statut_cours', models.CharField(choices=[('en_attente', 'En attente'), ('realiser', 'Réaliser'), ('annuler', 'Annuler')], default='en_attente', max_length=10)),
                ('payment_id', models.IntegerField(null=True)),
                ('demande_paiement_id', models.IntegerField(null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.cours')),
            ],
        ),
        migrations.CreateModel(
            name='Detail_demande_paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix_heure', models.FloatField()),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.cours')),
                ('demande_paiement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.demande_paiement')),
                ('horaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.horaire')),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matiere', models.CharField(max_length=100, unique=True)),
                ('mat_cathegorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.matiere_cathegorie')),
            ],
            options={
                'ordering': ['mat_cathegorie', 'matiere'],
            },
        ),
        migrations.CreateModel(
            name='Mes_eleves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('remarque', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eleves.eleve')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='demande_paiement',
            name='mon_eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.mes_eleves'),
        ),
        migrations.AddField(
            model_name='cours',
            name='mon_eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.mes_eleves'),
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.CharField(max_length=100, unique=True)),
                ('niv_ordre', models.IntegerField()),
                ('niv_cathegorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.niveau_cathegorie')),
            ],
            options={
                'ordering': ['niv_cathegorie', 'niv_ordre'],
            },
        ),
        migrations.CreateModel(
            name='DetailAccordRemboursement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refunded_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.TextField()),
                ('accord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.accordremboursement')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.payment')),
            ],
        ),
        migrations.CreateModel(
            name='DetailAccordReglement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professor_share', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.TextField()),
                ('accord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.accordreglement')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.payment')),
            ],
        ),
        migrations.CreateModel(
            name='Experience_cathegorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_cathegorie', models.CharField(max_length=100)),
                ('nom_pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.pays')),
            ],
            options={
                'ordering': ['nom_pays'],
            },
        ),
        migrations.AddField(
            model_name='diplome_cathegorie',
            name='nom_pays',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.pays'),
        ),
        migrations.CreateModel(
            name='Pro_fichier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modif', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('titre_fiche', models.CharField(max_length=255)),
                ('parcours', models.TextField(blank=True, null=True)),
                ('pedagogie', models.TextField(blank=True, null=True)),
                ('video_youtube_url', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_modif'],
            },
        ),
        migrations.CreateModel(
            name='Prof_doc_telecharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_telechargement', models.DateField(default=datetime.date.today)),
                ('doc_telecharge', models.ImageField(upload_to='photos/%y/%m/')),
                ('email_telecharge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.email_telecharge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_telechargement'],
            },
        ),
        migrations.CreateModel(
            name='Prof_mat_niv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principal', models.BooleanField(default=False)),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.matiere')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.niveau')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', '-principal', 'matiere', 'niveau'],
            },
        ),
        migrations.CreateModel(
            name='Prix_heure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(choices=[('a_domicile', 'Cours à domicile'), ('webcam', 'Cours par webcam'), ('stage', 'Stage pendant les vacances'), ('stage_webcam', 'Stage par webcam')], max_length=30, null=True)),
                ('prix_heure', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('prof_mat_niv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.prof_mat_niv')),
            ],
            options={
                'ordering': ['user', 'prof_mat_niv'],
            },
        ),
        migrations.CreateModel(
            name='Prof_zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.commune')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Professeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('civilite', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme'), ('Autre', 'Autre')], max_length=10, null=True)),
                ('numero_telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('date_naissance', models.DateField(null=True)),
                ('adresse', models.CharField(max_length=255)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/%y/%m/%d/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='accordreglement',
            name='professeur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.professeur'),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=100, unique=True)),
                ('nom_pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.pays')),
            ],
            options={
                'ordering': ['nom_pays'],
            },
        ),
        migrations.AddField(
            model_name='departement',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.region'),
        ),
        migrations.AddConstraint(
            model_name='commune',
            constraint=models.UniqueConstraint(fields=('departement', 'commune', 'code_postal'), name='unique_departement_commune_postal)'),
        ),
        migrations.AddConstraint(
            model_name='diplome',
            constraint=models.UniqueConstraint(fields=('user', 'diplome_cathegorie', 'intitule'), name='unique_user_diplome_intitule'),
        ),
        migrations.AddConstraint(
            model_name='experience',
            constraint=models.UniqueConstraint(fields=('user', 'type', 'commentaire'), name='unique_user_type_commentaire'),
        ),
        migrations.AddConstraint(
            model_name='mes_eleves',
            constraint=models.UniqueConstraint(fields=('user', 'eleve'), name='unique_user_eleve'),
        ),
        migrations.AddConstraint(
            model_name='experience_cathegorie',
            constraint=models.UniqueConstraint(fields=('nom_pays', 'exp_cathegorie'), name='unique_pays_experience'),
        ),
        migrations.AddConstraint(
            model_name='diplome_cathegorie',
            constraint=models.UniqueConstraint(fields=('nom_pays', 'dip_cathegorie'), name='unique_pays_diplome'),
        ),
        migrations.AddConstraint(
            model_name='prof_mat_niv',
            constraint=models.UniqueConstraint(fields=('user', 'matiere', 'niveau'), name='unique_user_mat_niv'),
        ),
        migrations.AddConstraint(
            model_name='prix_heure',
            constraint=models.UniqueConstraint(fields=('user', 'prof_mat_niv', 'format'), name='prof_mat_niv_format'),
        ),
        migrations.AddConstraint(
            model_name='prof_zone',
            constraint=models.UniqueConstraint(fields=('user', 'commune'), name='unique_user_commune'),
        ),
        migrations.AddConstraint(
            model_name='region',
            constraint=models.UniqueConstraint(fields=('nom_pays', 'region'), name='unique_pays_region'),
        ),
        migrations.AddConstraint(
            model_name='departement',
            constraint=models.UniqueConstraint(fields=('region', 'departement'), name='unique_region_departement'),
        ),
    ]
